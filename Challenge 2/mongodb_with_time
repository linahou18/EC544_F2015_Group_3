var mongo = require('mongodb'),
Server = mongo.Server,
Db = mongo.Db;

var server = new Server('localhost', 27017, {auto_reconnect: true});
var db = new Db('temp_db2', server);

db.open(function(err, db) {
        if(!err) {
        console.log("We are connected");
        }
        });






var time =new Date().toLocaleTimeString('en-US', { hour12: false,
                                        hour: "numeric",
                                        minute: "numeric"}).toString();

var SerialPort = require("serialport");
var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);

var portName = process.argv[2],
portConfig = {
baudRate: 9600,
parser: SerialPort.parsers.readline("\n")
};

var sp;
var now=1;
sp = new SerialPort.SerialPort(portName, portConfig);

app.get('/', function(req, res){
        res.sendfile('index.html');
        });

var txt = '{"temperature":[' +
'{"temp":'+'0'+',"sensor":'+ '0'+'},' +
']}'
var obj = eval ("(" + txt + ")");

io.on('connection', function(socket){
      console.log('a user connected');
      socket.on('disconnect', function(){
                });
      socket.on('chat message', function(msg){
                io.emit('chat message', msg+"qqq");
                sp.write(msg + "\n");
                });
      });

http.listen(3000, function(){
            console.log('listening on *:3000');
            });

sp.on("open", function () {
      console.log('open');
      sp.on('data', function(data) {
            console.log('data received: ' + data);
            io.emit("chat message", "An XBee says: " + data);
            
            c={"temp":data.substring(1),"sensor":data.substring(0,1),"time":time};
            obj.temperature.push(c);
            //insert mongodb
            db.open(function(err, db) {
                    if(!err) {
                    db.collection('bar', function(err, collection) {
                                  var doc1 = {temp:data.substring(1),sensor:data.substring(0,1),time:time};
                                  
                                  
                                  collection.insert(doc1);
                                  
                                  });
                    }
                    });
            
            
            io.emit("chat message", "sensor#:"+obj.temperature[now].sensor +", temperature:" + obj.temperature[now].temp+", time: " + time
);
            now++;
            });
      });
